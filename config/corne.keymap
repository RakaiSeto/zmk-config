/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1250  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        both_layer {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                         &kp LGUI  &mo 1  &kp LCTRL    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE   &kp N1        &kp N2  &kp N3        &kp C_BRI_UP  &kp C_BRIGHTNESS_DEC    &trans          &mmv MOVE_UP    &trans           &kp MINUS     &kp EQUAL  &kp DEL
&bt BT_CLR  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &trans        &trans                  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp UP_ARROW  &trans     &trans
&kp LSHFT   &kp N7        &kp N8  &kp N9        &kp N0        &trans                  &mkp LCLK       &mkp RCLK       &kp LEFT_ARROW   &kp DOWN      &kp RIGHT  &kp ENTER
                                  &kp LGUI      &trans        &kp LCTRL               &kp SPACE         &mo 3           &kp RALT
            >;
        };

        raise {
            bindings = <
&kp ESC         &kp F1  &kp F2   &kp F3        &kp F4   &trans       &kp K_PLAY_PAUSE  &kp K_MUTE  &kp PRINTSCREEN  &kp C_VOL_DN      &kp C_VOLUME_UP    &kp BACKSPACE
&kp TAB         &kp F5  &kp F6   &kp F7        &kp F8   &trans       &trans            &trans      &soft_off        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_SHIFT  &kp F9  &kp F10  &kp F11       &kp F12  &trans       &mkp MB4          &mkp MB5    &mkp MCLK        &trans            &trans             &kp ENTER
                                 &kp LEFT_WIN  &mo 3    &kp LCTRL    &kp SPACE         &trans      &kp RIGHT_ALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC         &bt BT_PRV  &bt BT_NXT  &trans          &trans          &bt BT_CLR_ALL     &trans          &mmv MOVE_UP    &trans           &trans  &soft_off     &trans
&kp CAPS        &trans      &trans      &trans          &msc SCRL_UP    &trans             &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &out OUT_BLE  &out OUT_USB
&kp LEFT_SHIFT  &trans      &trans      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT    &mkp LCLK       &mkp MB2        &trans           &trans  &trans        &kp ENTER
                                        &kp LEFT_WIN    &trans          &kp LCTRL          &kp SPACE       &trans          &kp RIGHT_ALT
            >;
        };
    };
};
